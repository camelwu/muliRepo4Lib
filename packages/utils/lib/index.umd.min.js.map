{"version":3,"file":"index.umd.min.js","sources":["../src/forOwn.ts","../src/env.ts","../src/getType.ts","../src/ii.ts","../src/is.ts","../src/getAbsoluteUrl.ts","../src/index.ts","../src/assign.ts","../src/chunk.ts","../src/escapeRegExp.ts","../src/groupBy.ts","../src/has.ts"],"sourcesContent":["import {AnyObject} from './enhanceType'\n\nexport interface ForOwnTraverse<T extends AnyObject, K extends string | number = Extract<keyof T, string | number>> {\n  /**\n   * 遍历函数。\n   *\n   * @param value 值\n   * @param key 键\n   * @param obj 原对象\n   * @returns 返回 `false` 可提前退出遍历\n   */\n  (value: T[K], key: K, obj: T): any,\n}\n\n/**\n * 遍历对象的可枚举属性。若遍历函数返回 `false`，遍历会提前退出。\n *\n * 注：基于你传入的 `obj`，遍历函数中 `key` 的类型可能为 `number`，\n * 但在运行时，`key` 始终为 `string`，\n * 因此，你应该始终把 `key` 当作 `string` 处理。\n * （为什么会这样？https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208）\n *\n * @param obj 要遍历的对象\n * @param traverse 遍历函数\n * @example\n * ```ts\n * forOwn(\n *   { x: '1', y: 2 },\n *   (value, key) => {\n *     console.log(key, value)\n *   }\n * )\n * ```\n */\nexport function forOwn<T extends AnyObject>(obj: T, traverse: ForOwnTraverse<T>) {\n  for (const key in obj) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (traverse(obj[key] as any, key as any, obj) === false) {\n        break\n      }\n    }\n  }\n}\n","const store: Record<string, any> = Object.create(null)\n\n/**\n * 获取全局对象。\n *\n * @returns 返回全局对象\n * @example\n * ```ts\n * // 浏览器中\n * getGlobal() // => window\n * // Node 中\n * getGlobal() // => global\n * ```\n */\nexport function getGlobal(): any {\n  if (store.getGlobal == null) {\n    store.getGlobal = (\n      inBrowser()\n        ? window\n        : typeof global === 'object'\n          ? global\n          // see: https://stackoverflow.com/a/6930376\n          // eslint-disable-next-line\n          : Function('return this')() || (42, eval)('this') || {}\n    )\n  }\n  return store.getGlobal\n}\n\n/* istanbul ignore next */\ngetGlobal.clearCache = () => {\n  delete store.getGlobal\n}\n\n/**\n * 检查是否在浏览器环境中。\n *\n * @param callback 在浏览器环境中执行的回调\n * @returns 在浏览器环境中返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * // 浏览器中\n * inBrowser() // => true\n * inBrowser(\n *   () => console.log('你在浏览器中'),\n * )\n * ```\n */\nexport function inBrowser(callback?: () => void): boolean {\n  if (store.inBrowser === undefined) {\n    store.inBrowser = typeof window === 'object'\n      && typeof document === 'object'\n      && document.nodeType === 9\n  }\n  if (store.inBrowser && typeof callback === 'function') {\n    callback()\n  }\n  return store.inBrowser\n}\n\n/* istanbul ignore next */\ninBrowser.clearCache = () => {\n  delete store.inBrowser\n}\n\n/**\n * 检查是否在 `Node` 环境中。\n *\n * @param callback 在 `Node` 环境中执行的回调\n * @returns 在 `Node` 环境中返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * // Node 中\n * inNode() // => true\n * inNode(\n *   () => console.log('你在 Node 中'),\n * )\n * ```\n */\nexport function inNode(callback?: () => void): boolean {\n  if (store.inNode === undefined) {\n    store.inNode = typeof process !== 'undefined'\n      && process.versions != null\n      && process.versions.node != null\n  }\n  /* istanbul ignore if */\n  if (store.inNode && typeof callback === 'function') {\n    callback()\n  }\n  return store.inNode\n}\n\n/* istanbul ignore next */\ninNode.clearCache = () => {\n  delete store.inNode\n}\n\n/**\n * 检查是否在微信小程序环境中。\n *\n * @param callback 在微信小程序环境中执行的回调\n * @returns 在微信小程序环境中返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * // 微信小程序中\n * inWechatMiniProgram() // => true\n * inWechatMiniProgram(\n *   () => console.log('你在微信小程序中'),\n * )\n * ```\n */\nexport function inWechatMiniProgram(callback?: () => void): boolean {\n  if (store.inWechatMiniProgram === undefined) {\n    store.inWechatMiniProgram = typeof wx === 'object'\n      && wx !== null\n      && typeof wx.getSystemInfo === 'function'\n  }\n  /* istanbul ignore if */\n  if (store.inWechatMiniProgram && typeof callback === 'function') {\n    callback()\n  }\n  return store.inWechatMiniProgram\n}\n\ninWechatMiniProgram.clearCache = () => {\n  delete store.inWechatMiniProgram\n}\n\n/**\n * 检查是否在微信浏览器环境中。\n *\n * @param callback 在微信浏览器环境中执行的回调\n * @returns 在微信浏览器环境返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * // 微信浏览器中\n * inWechatWebview() // => true\n * inWechatWebview(\n *   () => console.log('你在微信浏览器中'),\n * )\n * ```\n */\nexport function inWechatWebview(callback?: () => void): boolean {\n  if (store.inWechatWebview === undefined) {\n    store.inWechatWebview = inBrowser()\n      && /micromessenger/.test(navigator.userAgent.toLowerCase())\n  }\n  /* istanbul ignore if */\n  if (store.inWechatWebview && typeof callback === 'function') {\n    callback()\n  }\n  return store.inWechatWebview\n}\n\ninWechatWebview.clearCache = () => {\n  delete store.inWechatWebview\n}\n\n/**\n * 检查是否在 `iOS` 设备中。\n *\n * @param callback 在 `iOS` 设备中执行的回调\n * @returns 在 `iOS` 设备中返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * // iOS 设备中\n * inIOS() // => true\n * inIOS(\n *   () => console.log('你在 iOS 设备中'),\n * )\n * ```\n */\nexport function inIOS(callback?: () => void): boolean {\n  if (store.inIOS === undefined) {\n    store.inIOS = inBrowser()\n      && !!navigator.platform\n      && /iPad|iPhone|iPod/i.test(navigator.platform)\n  }\n  /* istanbul ignore if */\n  if (store.inIOS && typeof callback === 'function') {\n    callback()\n  }\n  return store.inIOS\n}\n\ninIOS.clearCache = () => {\n  delete store.inIOS\n}\n\n/**\n * 检查是否在 `Android` 设备中。\n *\n * @param callback 在 `Android` 设备中执行的回调\n * @returns 在 `Android` 设备中返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * // Android 设备中\n * inAndroid() // => true\n * inAndroid(\n *   () => console.log('你在 Android 设备中'),\n * )\n * ```\n */\nexport function inAndroid(callback?: () => void): boolean {\n  if (store.inAndroid === undefined) {\n    store.inAndroid = inBrowser()\n      && !!navigator.userAgent\n      && /Android/i.test(navigator.userAgent)\n  }\n  /* istanbul ignore if */\n  if (store.inAndroid && typeof callback === 'function') {\n    callback()\n  }\n  return store.inAndroid\n}\n\ninAndroid.clearCache = () => {\n  delete store.inAndroid\n}\n","import {LiteralUnion} from './enhanceType'\n\nexport type GetTypeReturn = LiteralUnion<(\n  'Undefined' |\n  'Null' |\n  'Array' |\n  'String' |\n  'Arguments' |\n  'Function' |\n  'Error' |\n  'Boolean' |\n  'Number' |\n  'Date' |\n  'RegExp' |\n  'Object' |\n  'JSON' |\n  'Math' |\n  'Symbol' |\n  'Map' |\n  'Set' |\n  'WeakMap' |\n  'WeakSet'\n), string>\n\n/**\n * 检测 `value` 的类型。\n *\n * @param value 要检测的值\n * @returns 返回检测值的类型\n * @see https://www.ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring\n * @see https://www.ecma-international.org/ecma-262/5.1/#sec-8.6.2\n * @example\n * ```ts\n * getType(1) // => 'Number'\n * getType(true) // => 'Boolean'\n * getType([]) // => 'Array'\n * getType(/hello/) // => 'RegExp'\n * ```\n */\nexport function getType(value: any): GetTypeReturn {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n","import {AnyFunction} from './enhanceType'\n\n/**\n * 立即调用函数并返回其返回值。\n *\n * 注：`ii = immediately invoke`\n *\n * @param fn 要调用的函数\n * @returns 返回被调用函数的返回值\n * @example\n * ```ts\n * ii(() => 1) // => 1\n * ```\n */\nexport function ii<F extends AnyFunction>(fn: F): ReturnType<F> {\n  return fn()\n}\n","import {getGlobal} from './env'\nimport {getType} from './getType'\nimport {ii} from './ii'\n\n/**\n * 检查 `value` 是否是一个数组。\n *\n * @param value 要检查的值\n * @returns `value` 是数组返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isArray(['x']) // => true\n * isArray('x') // => false\n * ```\n */\nexport function isArray(value: any): value is any[] {\n  return Array.isArray(value)\n}\n\n/**\n * 检查 `value` 是否是一个布尔值。\n *\n * @param value 要检查的值\n * @returns `value` 是布尔值返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isBoolean(true) // => true\n * isBoolean(false) // => true\n * isBoolean('true') // => false\n * ```\n */\nexport function isBoolean(value: any): value is boolean {\n  return typeof value === 'boolean'\n}\n\n/**\n * 检查 `value` 是否是合法的中国大陆居民 `18` 位身份证号码。\n *\n * @param value 要检查的值\n * @returns `value` 是合法的中国大陆居民 `18` 位身份证号码返回 `true`，否则返回 `false`\n * @see https://my.oschina.net/labrusca/blog/306116\n * @see http://developer.51cto.com/art/201803/568755.htm\n * @example\n * ```ts\n * isChineseIDCardNumber('123456') // => false\n * ```\n */\nexport function isChineseIDCardNumber(value: string): boolean {\n  const testRegExp = /^[1-9]([0-9]{14}|[0-9]{16}[0-9Xx])$/\n  const areaMap = [11, 12, 13, 14, 15, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 71, 81, 82]\n  const weightMap = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\n  const codeMap = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2']\n\n  const isValidDate = (year: number, month: number, day: number): boolean => {\n    const date = new Date(year, month - 1, day)\n    return (\n      date.getFullYear() === year\n        && date.getMonth() + 1 === month\n        && date.getDate() === day\n        && date.getTime() < new Date().getTime()\n        && year > 1900\n    )\n  }\n\n  const len = value.length\n\n  // 长度错误\n  if (len !== 15 && len !== 18) {\n    return false\n  }\n\n  // 模式校验\n  if (!testRegExp.test(value)) {\n    return false\n  }\n\n  // 地区校验\n  if (areaMap.indexOf(+value.substr(0, 2)) === -1) {\n    return false\n  }\n\n  // 15 位\n  if (len === 15) {\n    return isValidDate(\n      +`19${value.substr(6, 2)}`,\n      +value.substr(8, 2),\n      +value.substr(10, 2),\n    )\n  }\n\n  // 18 位\n  if (!isValidDate(\n    +value.substr(6, 4),\n    +value.substr(10, 2),\n    +value.substr(12, 2),\n  )) {\n    return false\n  }\n\n  // 校验码\n  const sum = value.split('').slice(0, 17).reduce(\n    (s, num, index) => {\n      s += +num * weightMap[index]\n      return s\n    },\n    0,\n  )\n  return codeMap[sum % 11] === value[17].toUpperCase()\n}\n\n/**\n * 检测 `number` 是否可能是中国的手机号码。\n *\n * @param number 要检测的号码\n * @returns `number` 可能是中国的手机号码返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isPossibleChineseMobilePhoneNumber(18000030000) // => true\n * isPossibleChineseMobilePhoneNumber(10086) // => false\n * ```\n */\nexport function isPossibleChineseMobilePhoneNumber(number: number | string) {\n  return /^1[3-9][0-9]{9}$/.test(String(number))\n}\n\n/**\n * 检测 `value` 是否可能是中国人的姓名，支持少数名族姓名中间的 `·` 号。\n *\n * @param value 要检测的值\n * @returns `value` 可能是中国人的姓名返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isPossibleChineseName('鲁') // => false\n * isPossibleChineseName('鲁迅') // => true\n * isPossibleChineseName('买买提·吐尔逊') // => true\n * ```\n */\nexport function isPossibleChineseName(value: string): boolean {\n  return (\n    !!value\n      && value.length > 1\n      && value.length < 20\n      && value[0] !== '\\u00B7'\n      && value.indexOf('\\u00B7\\u00B7') === -1\n      && isHan(value.replace(/\\u00B7/g, ''))\n  )\n}\n\n/**\n * 检查 `value` 是否是一个日期。\n *\n * @param value 要检查的值\n * @returns `value` 是日期返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isDate(new Date()) // => true\n * ```\n */\nexport function isDate(value: any): value is Date {\n  return getType(value) === 'Date'\n}\n\n/**\n * 检查 `value` 是否是一个邮件地址。\n *\n * @param value 要检查的值\n * @returns `value` 是邮件地址返回 `true`，否则返回 `false`\n * @see http://emailregex.com/\n * @example\n * ```ts\n * isEmail('hello@foo.bar') // => true\n * isEmail('hello@foo') // => false\n * ```\n */\nexport function isEmail(value: string): boolean {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  return re.test(value)\n}\n\n/**\n * 检查 `value` 是否是空值，包括：`undefined`、`null`、`''`、`false`、`true`、`[]`、`{}`。\n *\n * @param value 要检查的值\n * @returns `value` 是空值返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isEmpty(undefined) // => true\n * isEmpty(null) // => true\n * isEmpty('') // => true\n * isEmpty(false) // => true\n * isEmpty(true) // => true\n * isEmpty([]) // => true\n * isEmpty({}) // => true\n * ```\n */\nexport function isEmpty(value: any): boolean {\n  return (\n    [undefined, null, '', false, true].some(item => item === value)\n      || (Array.isArray(value) && value.length === 0)\n      || (\n        isPlainObject(value) && ii(() => {\n          for (const _ in value) {\n            return false\n          }\n          return true\n        })\n      )\n  )\n}\n\n/**\n * 检查给定的数组的各项是否相等。\n *\n * @param arrs 要检查的数组\n * @returns 给定的数组的各项都相等返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isEqualArray([1], [1]) // => true\n * isEqualArray([1], [5]) // => false\n * ```\n */\nexport function isEqualArray(...arrs: any[][]): boolean {\n  for (let i = 0; i < arrs.length; i++) {\n    if (!Array.isArray(arrs[i])) {\n      return false\n    }\n\n    if (arrs[i] === arrs[0]) {\n      continue\n    }\n\n    if (arrs[i].length !== arrs[0].length) {\n      return false\n    }\n\n    for (let j = 0; j < arrs[i].length; j++) {\n      if (arrs[i][j] !== arrs[0][j]) {\n        return false\n      }\n    }\n  }\n\n  return true\n}\n\n/**\n * 检查 `value` 是否是原始有限数值。\n *\n * @param value 要检查的值\n * @returns `value` 是原始有限数值返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isFinite(1) // => true\n * isFinite(Infinity) // => false\n * ```\n */\nexport function isFinite(value: any): value is number {\n  return Number.isFinite(value)\n}\n\n/**\n * 检查 `value` 是否是一个函数。\n *\n * @param value 要检查的值\n * @returns `value` 是函数返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isFunction(() => {}) // => true\n * isFunction(2000) // => false\n * ```\n */\nexport function isFunction(value: any): value is Function {\n  return typeof value === 'function'\n}\n\n/**\n * 检查 `value` 是否全是汉字。\n *\n * @param value 要检查的值\n * @returns `value` 全是汉字返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isHan('hello') // => false\n * isHan('嗨咯') // => true\n * ```\n */\nexport function isHan(value: string): boolean {\n  // https://mothereff.in/regexpu#input=const+regex+%3D+%2F%5E%5Cp%7BScript%3DHan%7D%2B%24%2Fu%3B&unicodePropertyEscape=1\n  const re = /* /^\\p{Script=Han}+$/u */ /^(?:[\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u3005\\u3007\\u3021-\\u3029\\u3038-\\u303B\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uF900-\\uFA6D\\uFA70-\\uFAD9]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])+$/\n  return re.test(value)\n}\n\n/**\n * 检查 `value` 是否是一个整数。\n *\n * @param value 要检查的值\n * @returns `value` 是整数返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isInteger(1) // => true\n * isInteger(1.2) // => false\n * isInteger(-1) // => true\n * ```\n */\nexport function isInteger(value: any): value is number {\n  return Number.isInteger(value)\n}\n\n/**\n * 检查 `value` 是否是一个正整数。\n *\n * @param value 要检查的值\n * @returns `value` 是正整数返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isPositiveInteger(1) // => true\n * isPositiveInteger(-1) // => false\n * ```\n */\nexport function isPositiveInteger(value: any): value is number {\n  return value > 0 && isInteger(value)\n}\n\n/**\n * 检查 `value` 是否是一个负整数。\n *\n * @param value 要检查的值\n * @returns `value` 是负整数返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isNegativeInteger(-1) // => true\n * isNegativeInteger(1) // => false\n * ```\n */\nexport function isNegativeInteger(value: any): value is number {\n  return value < 0 && isInteger(value)\n}\n\n/**\n * 检查 `value` 是否是 `NaN`。\n *\n * @param value 要检查的值\n * @returns `value` 是 `NaN` 返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isNaN(NaN) // => true\n * isNaN(2) // => false\n * ```\n */\nexport function isNaN(value: any): boolean {\n  return value !== value\n}\n\n/**\n * 检查 `value` 是否是 `null` 或 `undefined`。\n *\n * @param value 要检查的值\n * @returns `value` 是 `null` 或 `undefined` 返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isNil(null) // => true\n * isNil(undefined) // => true\n * ```\n */\nexport function isNil(value: any): value is null | undefined {\n  return value == null\n}\n\n/**\n * 检查 `value` 是否是 `null`。\n *\n * @param value 要检查的值\n * @returns `value` 是 `null` 返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isNull(null) // => true\n * ```\n */\nexport function isNull(value: any): value is null {\n  return value === null\n}\n\n/**\n * 检查 `value` 是否是一个数字。\n *\n * 注：`NaN` 不被认为是数字。\n *\n * @param value 要检查的值\n * @returns `value` 是数字返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isNumber(1) // => true\n * isNumber(0.1) // => true\n * isNumber(NaN) // => false\n * ```\n */\nexport function isNumber(value: any): value is number {\n  return typeof value === 'number' && !isNaN(value)\n}\n\n/**\n * 检查 `value` 是否是一个数值。\n *\n * 注：`Infinity`、`-Infinity`、`NaN` 不被认为是数值。\n *\n * @param value 要检查的值\n * @returns `value` 是数值返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isNumeric(1) // => true\n * isNumeric('1') // => true\n * ```\n */\nexport function isNumeric(value: any): value is number | string {\n  return value != null && !(getGlobal().isNaN || isNaN)(value - parseFloat(value))\n}\n\n/**\n * 检查 `value` 是否是一个对象。\n *\n * @param value 要检查的值\n * @returns `value` 是对象返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isObject({}) // => true\n * isObject(() => {}) // => true\n * isObject(null) // => false\n * ```\n */\nexport function isObject(value: any): value is object {\n  const type = typeof value\n  return value != null && (type === 'object' || type === 'function')\n}\n\n/**\n * 检查 `value` 是否是一个普通对象。\n *\n * @param value 要检查的值\n * @returns `value` 是普通对象返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isPlainObject({}) // => true\n * isPlainObject(Object.create(null)) // => true\n * isPlainObject(() => {}) // => false\n * ```\n */\nexport function isPlainObject(value: any): value is Record<keyof any, any> {\n  if (!value || typeof value !== 'object') {\n    return false\n  }\n  const proto = Object.getPrototypeOf(value)\n  if (proto === null) {\n    return true\n  }\n  const Ctor = proto.constructor\n  return typeof Ctor === 'function' && Ctor instanceof Ctor\n}\n\n/**\n * 检查 `value` 是否像 `Promise`。\n *\n * @param value 要检查的值\n * @returns `value` 像 `Promise` 返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isPromiseLike(Promise.resolve()) // => true\n * ```\n */\nexport function isPromiseLike(value: any): value is PromiseLike<any> {\n  return (\n    isObject(value)\n      && typeof (value as any).then === 'function'\n  )\n}\n\n/**\n * 检查 `value` 是否是一个正则对象。\n *\n * @param value 要检查的值\n * @returns `value` 是正则对象返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isRegExp(/hello/) // => true\n * isRegExp(new RegExp('hello')) // => true\n * ```\n */\nexport function isRegExp(value: any): value is RegExp {\n  return getType(value) === 'RegExp'\n}\n\n/**\n * 检查 `value` 是否是一个字符串。\n *\n * @param value 要检查的值\n * @returns `value` 是字符串返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isString('') // => true\n * isString('hello') // => true\n * ```\n */\nexport function isString(value: any): value is string {\n  return typeof value === 'string'\n}\n\n/**\n * 检查 `value` 是否等于 `undefined`。\n *\n * @param value 要检查的值\n * @returns `value` 是 `undefined` 返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * isUndefined(undefined) // => true\n * isUndefined(void 0) // => true\n * ```\n */\nexport function isUndefined(value: any): value is undefined {\n  return value === undefined\n}\n\n/**\n * 检查 `value` 是否是一个有效的网址，仅支持 `http`、`https` 协议，支持 `IP` 域名。\n *\n * @param value 要检查的值\n * @returns `value` 是有效的网址返回 `true`，否则返回 `false`\n * @see http://urlregex.com/\n * @example\n * ```ts\n * isUrl('http://foo.bar') // => true\n * isUrl('https://foo.bar/home') // => true\n * ```\n */\nexport function isUrl(value: string): boolean {\n  // http://urlregex.com/ ==> Ruby\n  const re = /^(?:(?:https?):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/i\n  return re.test(value)\n}\n\n/**\n * 检查 `value` 是否是一个 `arguments` 对象。\n *\n * @param value 要检查的值\n * @returns `value` 是 `arguments` 对象返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * function myFunction() {\n *   console.log(isArguments(arguments)) // true\n * }\n * ```\n */\nexport function isArguments(value: any): value is IArguments {\n  return getType(value) === 'Arguments'\n}\n","/**\n * 获取链接的绝对地址。\n *\n * @param url 链接\n * @returns 返回绝对地址\n */\nexport function getAbsoluteUrl(url: string): string {\n  if (typeof URL !== 'undefined') {\n    return new URL(url, `${location.protocol}${location.host}`).href\n  }\n  if (!getAbsoluteUrl.anchorElement) {\n    getAbsoluteUrl.anchorElement = document.createElement('a')\n  }\n  getAbsoluteUrl.anchorElement.href = url\n  return getAbsoluteUrl.anchorElement.href\n}\n\ngetAbsoluteUrl.anchorElement = null as HTMLAnchorElement | null\n","export * from './assign';\nexport * from './chunk';\nexport * from './enhanceType';\nexport * from './env';\nexport * from './escapeRegExp';\nexport * from './forOwn';\nexport * from './getAbsoluteUrl';\nexport * from './getType';\nexport * from './groupBy';\nexport * from './has';\nexport * from './ii';\nexport * from './is';\n/**\n *\n * @desc 判断两个数组是否相等\n * @param {Array} arr1\n * @param {Array} arr2\n * @return {Boolean}\n */\nexport function arrayEqual(arr1: Array<any>, arr2: Array<any>): boolean {\n    if (arr1 === arr2) return true;\n    if (arr1.length !== arr2.length) return false;\n    for (let i = 0; i < arr1.length; ++i) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n    return true;\n}\n\n/**\n *\n * @desc 判断元素是否有某个class\n * @param {HTMLElement} ele\n * @param {String} cls\n * @return {Boolean}\n */\nexport function hasClass(ele: HTMLElement, cls: string): boolean {\n    return new RegExp(`(\\\\s|^)${cls}(\\\\s|$)`).test(ele.className);\n}\n\n/**\n *\n * @desc   为元素添加class\n * @param  {HTMLElement} ele\n * @param  {String} cls\n */\nexport function addClass(ele: HTMLElement, cls: string): void {\n    if (!hasClass(ele, cls)) {\n        ele.className += ` ${cls}`;\n    }\n}\n\n\n/**\n *\n * @desc 为元素移除class\n * @param {HTMLElement} ele\n * @param {String} cls\n */\nexport function removeClass(ele: HTMLElement, cls: string): void {\n    if (hasClass(ele, cls)) {\n        const reg = new RegExp(`(\\\\s|^)${cls}(\\\\s|$)`);\n        ele.className = ele.className.replace(reg, \" \");\n    }\n}\n\n/**\n *\n * @desc 根据name读取cookie\n * @param  {String} name\n * @return {String}\n */\nexport function getCookie(name: string): string {\n    const arr = document.cookie.replace(/\\s/g, \"\").split(\";\");\n    for (let i = 0; i < arr.length; i++) {\n        const tempArr = arr[i].split(\"=\");\n        if (tempArr[0] === name) {\n            return decodeURIComponent(tempArr[1]);\n        }\n    }\n    return \"\";\n}\n\n/**\n *\n * @desc 根据name删除cookie\n * @param  {String} name\n */\nexport function removeCookie(name: string): void {\n    // 设置已过期，系统会立刻删除cookie\n    setCookie(name, \"1\", -1);\n}\n\n/**\n *\n * @desc  设置Cookie\n * @param {String} name\n * @param {String} value\n * @param {Number} days\n */\nexport function setCookie(name: string, value: string, days: number): void {\n    const date = new Date();\n    date.setDate(date.getDate() + days);\n    document.cookie = `${name}=${value};expires=${date}`;\n}\n\n/**\n *\n * @desc 获取浏览器类型和版本\n * @return {String}\n */\nexport function getExplore(): string {\n    const sys: { [propName: string]: any } = {};\n    const ua = navigator.userAgent.toLowerCase();\n    let s;\n    (s = ua.match(/rv:([\\d.]+)\\) like gecko/))\n        ? (sys.ie = s[1])\n        : (s = ua.match(/msie ([\\d\\.]+)/))\n            ? (sys.ie = s[1])\n            : (s = ua.match(/edge\\/([\\d\\.]+)/))\n                ? (sys.edge = s[1])\n                : (s = ua.match(/firefox\\/([\\d\\.]+)/))\n                    ? (sys.firefox = s[1])\n                    : (s = ua.match(/(?:opera|opr).([\\d\\.]+)/))\n                        ? (sys.opera = s[1])\n                        : (s = ua.match(/chrome\\/([\\d\\.]+)/))\n                            ? (sys.chrome = s[1])\n                            : (s = ua.match(/version\\/([\\d\\.]+).*safari/))\n                                ? (sys.safari = s[1])\n                                : 0;\n    // 根据关系进行判断\n    if (sys.ie) return `IE: ${sys.ie}`;\n    if (sys.edge) return `EDGE: ${sys.edge}`;\n    if (sys.firefox) return `Firefox: ${sys.firefox}`;\n    if (sys.chrome) return `Chrome: ${sys.chrome}`;\n    if (sys.opera) return `Opera: ${sys.opera}`;\n    if (sys.safari) return `Safari: ${sys.safari}`;\n    return \"Unknown\";\n}\n\n/**\n *\n * @desc 获取操作系统类型\n * @return {String}\n */\nexport function getOS(): string {\n    const userAgent =\n        (\"navigator\" in window &&\n            \"userAgent\" in navigator &&\n            navigator.userAgent.toLowerCase()) ||\n        \"\";\n    // let vendor = 'navigator' in window && 'vendor' in navigator && navigator.vendor.toLowerCase() || '';\n    const appVersion =\n        (\"navigator\" in window &&\n            \"appVersion\" in navigator &&\n            navigator.appVersion.toLowerCase()) ||\n        \"\";\n\n    if (\n        /iphone/i.test(userAgent) ||\n        /ipad/i.test(userAgent) ||\n        /ipod/i.test(userAgent)\n    )\n        return \"ios\";\n    if (/android/i.test(userAgent)) return \"android\";\n    if (/win/i.test(appVersion) && /phone/i.test(userAgent))\n        return \"windowsPhone\";\n    if (/mac/i.test(appVersion)) return \"MacOSX\";\n    if (/win/i.test(appVersion)) return \"windows\";\n    if (/linux/i.test(appVersion)) return \"linux\";\n    return \"Unknown\";\n}\n/**\n * 生成一个UID，保证同一时刻生成的值，不同即可，只能用于单机，\n * 不能用来共享，比如：当前生成的ID存到服务器上，会存在重复的风险\n */\nexport function getUId():String {\n    const resAry = Array(4);\n    const currentTime = new Date().getTime();\n    const uidAry = resAry.map(() => {\n        // eslint-disable-next-line no-bitwise\n        return `${(Math.random() * 16) | 0}`;\n    });\n    uidAry.push(currentTime.toString(16));\n    return uidAry.join(\"\");\n}\n/**\n * 根据当前选择器获取cavase元素\n *\n * @param {Number} ele\n * @return {Object} {x: Num, y: Num}\n */\nexport function formatPos(mouseX: number, mouseY: number) {\n    const zoom = (window as any).zoom || 1;\n    return { x: mouseX / zoom, y: mouseY / zoom };\n}\n\n/**\n * 获取当前时间\n *\n * @return {Number} 时间戳\n */\nexport function now() {\n    if (Date.now) {\n        return Date.now();\n    }\n    return new Date().getTime();\n}\n\n/**\n * @desc 函数防抖\n * 与throttle不同的是，debounce保证一个函数在多少毫秒内不再被触发，只会执行一次，\n * 要么在第一次调用return的防抖函数时执行，要么在延迟指定毫秒后调用。\n * @example 适用场景：如在线编辑的自动存储防抖。\n * @param  {Function} func          延迟毫秒后执行的函数。`this`上下文和所有参数都是按原样传递的，\n *                                  执行去抖动功能时，，调用`callback`。\n * @param  {Number}   wait          0或者更大的毫秒数。 对于事件回调，大约100或250毫秒（或更高）的延迟是最有用的。\n * @param  {Boolean}  immediate     可选，默认为false。\n *                                  如果为false或未传入，回调函数则在第一次调用return的防抖函数后延迟指定毫秒调用。\n *                                  如果为true，回调函数则在第一次调用return的防抖函数时直接执行\n *\n * @return {Function} 新的防抖函数。\n */\nexport function debounce(func: () => void, wait: number, immediate: boolean) {\n    let timeout: NodeJS.Timeout | null;\n\n    return function executedFunction(this: any, ...args: []) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const context = this;\n        // eslint-disable-next-line prefer-rest-params\n        // const args: any[] = args;\n\n        const later = () => {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n\n        const callNow = immediate && !timeout;\n\n        clearTimeout(timeout as NodeJS.Timeout);\n\n        timeout = setTimeout(later, wait);\n\n        if (callNow) func.apply(context, args);\n    };\n}\n\n/**\n *\n * @desc 获取元素\n * @param {string | HTMLElement} ele\n * @return {HTMLElement}\n * getEle(ele: any): Element;\n * getEle(ele: string): HTMLElement;\n * getEle(ele: \"canvas\"): HTMLCanvasElement;\n */\nexport function getEle(ele) {\n    if (typeof ele === \"string\") {\n        return document.querySelector(ele);\n    }\n    return ele;\n}\n/**\n *\n * @desc 获取滚动条距顶部的距离\n * @return {Number}\n */\nexport function getScrollTop(): number {\n    return (\n        (document.documentElement && document.documentElement.scrollTop) ||\n        document.body.scrollTop\n    );\n}\n\n/**\n *\n * @desc  获取一个元素的距离文档(document)的位置，类似jQ中的offset()\n * @param {HTMLElement} ele\n * @returns { {left: number, top: number} }\n */\nexport function offset(ele: HTMLElement): { left: number; top: number } {\n    const pos = {\n        left: 0,\n        top: 0\n    };\n    // 递归冒泡\n    while (ele) {\n        pos.left += ele.offsetLeft;\n        pos.top += ele.offsetTop;\n        // @ts-ignore\n        ele = ele.offsetParent;\n    }\n    return pos;\n}\nvar requestAnimFrame = (function () {\n    // window.mozRequestAnimationFrame ||#ff低版本\n    return (\n        window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        function (callback) {\n            window.setTimeout(callback, 1000 / 60);\n        }\n    );\n})();\n\n/**\n *\n * @desc 设置滚动条距顶部的距离\n * @param {Number} value\n */\nexport function setScrollTop(value: number): void {\n    window.scrollTo(0, value);\n    // return value;\n}\n\n/**\n *\n * @desc  在${duration}时间内，滚动条平滑滚动到${to}指定位置\n * @param {Number} to\n * @param {Number} duration\n */\nexport function scrollTo(to: number, duration: number): void {\n    if (duration < 0) {\n        setScrollTop(to);\n        return;\n    }\n    const diff = to - getScrollTop();\n    if (diff === 0) return;\n    const step = (diff / duration) * 10;\n    requestAnimFrame(function () {\n        if (Math.abs(step) > Math.abs(diff)) {\n            setScrollTop(getScrollTop() + diff);\n            return;\n        }\n        setScrollTop(getScrollTop() + step);\n        if (\n            (diff > 0 && getScrollTop() >= to) ||\n            (diff < 0 && getScrollTop() <= to)\n        ) {\n            return;\n        }\n        scrollTo(to, duration - 16);\n    });\n}\n\n/**\n *\n * @desc H5软键盘缩回、弹起回调\n * 当软件键盘弹起会改变当前 window.innerHeight，监听这个值变化\n * @param {Function} downCb 当软键盘弹起后，缩回的回调\n * @param {Function} upCb 当软键盘弹起的回调\n */\nexport function windowResize(downCb: () => void, upCb: () => void): void {\n    const clientHeight = window.innerHeight;\n    downCb = typeof downCb === \"function\" ? downCb : function () { };\n    upCb = typeof upCb === \"function\" ? upCb : function () { };\n    window.addEventListener(\"resize\", () => {\n        const height = window.innerHeight;\n        if (height === clientHeight) {\n            downCb();\n        }\n        if (height < clientHeight) {\n            upCb();\n        }\n    });\n}\n\n/**\n * @desc   函数节流。\n * 适用于限制`resize`和`scroll`等函数的调用频率\n *\n * @param  {Function}  func           延迟毫秒后执行的函数。`this`上下文和所有参数都是按原样传递的，\n *                                    执行去节流功能时，调用`callback`。\n * @param  {Number}    wait           0 或者更大的毫秒数。 对于事件回调，大约100或250毫秒（或更高）的延迟是最有用的。\n * @param  {Object}    options        可选，默认为false。\n *                                    如果noTrailing为true，当节流函数被调用，每过`delay`毫秒`callback`也将执行一次。\n *                                    如果noTrailing为false或者未传入，`callback`将在最后一次调用节流函数后再执行一次.\n *                                    （延迟`delay`毫秒之后，节流函数没有被调用,内部计数器会复位）\n *\n * @return {Function}  新的节流函数\n */\n\nexport function throttle(func: () => void, wait: number, options: any) {\n    let timeout: NodeJS.Timeout | null;\n    let context: any;\n    let args: [] | null;\n    let result: any;\n    let previous = 0;\n    // eslint-disable-next-line no-param-reassign\n    if (!options) options = {};\n\n    const later = () => {\n        previous = options.leading === false ? 0 : now();\n        timeout = null;\n        result = func.apply(context, args as []);\n        if (!timeout) {\n            context = null;\n            args = null;\n        }\n    };\n\n    const throttled = (...targs: []) => {\n        // let now = Date.now()||new Date().getTime();\n        const tnow = now();\n        if (!previous && options.leading === false) previous = tnow;\n        const remaining = wait - (tnow - previous);\n        // @ts-ignore\n        context = this;\n        // eslint-disable-next-line prefer-rest-params\n        args = targs;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = tnow;\n            result = func.apply(context, args);\n            if (!timeout) {\n                context = null;\n                args = null;\n            }\n        } else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n\n    throttled.cancel = () => {\n        clearTimeout(timeout as NodeJS.Timeout);\n        previous = 0;\n        timeout = null;\n        context = null;\n        args = null;\n    };\n\n    return throttled;\n}\n\n/**\n * @desc 根据keycode获得键名\n * @param  {Number} keycode\n * @return {String}\n */\nexport function getKeyName(keycode: number): string {\n    const keyCodeMap: { [propName: string]: any } = {\n        8: \"Backspace\",\n        9: \"Tab\",\n        13: \"Enter\",\n        16: \"Shift\",\n        17: \"Ctrl\",\n        18: \"Alt\",\n        19: \"Pause\",\n        20: \"Caps Lock\",\n        27: \"Escape\",\n        32: \"Space\",\n        33: \"Page Up\",\n        34: \"Page Down\",\n        35: \"End\",\n        36: \"Home\",\n        37: \"Left\",\n        38: \"Up\",\n        39: \"Right\",\n        40: \"Down\",\n        42: \"Print Screen\",\n        45: \"Insert\",\n        46: \"Delete\",\n\n        48: \"0\",\n        49: \"1\",\n        50: \"2\",\n        51: \"3\",\n        52: \"4\",\n        53: \"5\",\n        54: \"6\",\n        55: \"7\",\n        56: \"8\",\n        57: \"9\",\n\n        65: \"A\",\n        66: \"B\",\n        67: \"C\",\n        68: \"D\",\n        69: \"E\",\n        70: \"F\",\n        71: \"G\",\n        72: \"H\",\n        73: \"I\",\n        74: \"J\",\n        75: \"K\",\n        76: \"L\",\n        77: \"M\",\n        78: \"N\",\n        79: \"O\",\n        80: \"P\",\n        81: \"Q\",\n        82: \"R\",\n        83: \"S\",\n        84: \"T\",\n        85: \"U\",\n        86: \"V\",\n        87: \"W\",\n        88: \"X\",\n        89: \"Y\",\n        90: \"Z\",\n\n        91: \"Windows\",\n        93: \"Right Click\",\n\n        96: \"Numpad 0\",\n        97: \"Numpad 1\",\n        98: \"Numpad 2\",\n        99: \"Numpad 3\",\n        100: \"Numpad 4\",\n        101: \"Numpad 5\",\n        102: \"Numpad 6\",\n        103: \"Numpad 7\",\n        104: \"Numpad 8\",\n        105: \"Numpad 9\",\n        106: \"Numpad *\",\n        107: \"Numpad +\",\n        109: \"Numpad -\",\n        110: \"Numpad .\",\n        111: \"Numpad /\",\n\n        112: \"F1\",\n        113: \"F2\",\n        114: \"F3\",\n        115: \"F4\",\n        116: \"F5\",\n        117: \"F6\",\n        118: \"F7\",\n        119: \"F8\",\n        120: \"F9\",\n        121: \"F10\",\n        122: \"F11\",\n        123: \"F12\",\n\n        144: \"Num Lock\",\n        145: \"Scroll Lock\",\n        182: \"My Computer\",\n        183: \"My Calculator\",\n        186: \";\",\n        187: \"=\",\n        188: \",\",\n        189: \"-\",\n        190: \".\",\n        191: \"/\",\n        192: \"`\",\n        219: \"[\",\n        220: \"\\\\\",\n        221: \"]\",\n        222: \"'\"\n    };\n    if (keyCodeMap[keycode]) {\n        return keyCodeMap[keycode];\n    }\n    console.log(`Unknow Key(Key Code:${keycode})`);\n    return \"\";\n}\n\n/**\n * @desc 深拷贝，支持常见类型\n * @param {Any} values\n * @return {Any}\n */\nexport function deepClone(values: any): any {\n    let copy: { [propName: string]: any };\n\n    // Handle the 3 simple types, and null or undefined\n    if (values == null || typeof values !== \"object\") return values;\n\n    // Handle Date\n    if (values instanceof Date) {\n        copy = new Date();\n        copy.setTime(values.getTime());\n        return copy;\n    }\n\n    // Handle Array\n    if (values instanceof Array) {\n        copy = [];\n        for (let i = 0, len = values.length; i < len; i++) {\n            copy[i] = deepClone(values[i]);\n        }\n        return copy;\n    }\n\n    // Handle Object\n    if (values instanceof Object) {\n        copy = {};\n        for (const attr in values) {\n            if (values.hasOwnProperty(attr)) copy[attr] = deepClone(values[attr]);\n        }\n        return copy;\n    }\n\n    throw new Error(\"Unable to copy values! Its type isn't supported.\");\n}\n\n/**\n *\n * @desc   判断`obj`是否为空\n * @param  {Object} obj\n * @return {Boolean}\n */\nexport function isEmptyObject(obj: object): boolean {\n    if (!obj || typeof obj !== \"object\" || Array.isArray(obj)) return false;\n    return !Object.keys(obj).length;\n}\n\n/**\n *\n * @desc 随机生成颜色\n * @return {String}\n */\nexport function randomColor(): string {\n    return `#${`00000${((Math.random() * 0x1000000) << 0).toString(16)}`.slice(\n        -6\n    )}`;\n}\n\n/**\n *\n * @desc 生成指定范围[min, max]的随机数\n * @param  {Number} min\n * @param  {Number} max\n * @return {Number}\n */\nexport function randomNum(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n *\n * @desc 判断是否为16进制颜色，rgb 或 rgba\n * @param  {String}  str\n * @return {Boolean}\n */\nexport function isColor(str: string): boolean {\n    return /^(#([0-9a-fA-F]{3}){1,2}|[rR][gG][Bb](\\((\\s*(2[0-4]\\d|25[0-5]|[01]?\\d{1,2})\\s*,){2}\\s*(2[0-4]\\d|25[0-5]|[01]?\\d{1,2})\\s*\\)|[Aa]\\((\\s*(2[0-4]\\d|25[0-5]|[01]?\\d{1,2})\\s*,){3}\\s*([01]|0\\.\\d+)\\s*\\)))$/.test(\n        str\n    );\n}\n\n/**\n *\n * @desc  判断是否为身份证号\n * @param  {String|Number} str\n * @return {Boolean}\n */\nexport function isIdCard(str: string | number): boolean {\n    return /^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$/.test(\n        str as string\n    );\n}\n\n/**\n *\n * @desc   判断是否为手机号\n * @param  {String|Number} str\n * @return {Boolean}\n */\nexport function isPhoneNum(str: string | number): boolean {\n    return /^(\\+?0?86\\-?)?1[3456789]\\d{9}$/.test(str as string);\n}\n\n/**\n *\n * @desc   现金额转大写\n * @param  {Number} n\n * @return {String}\n */\nexport function digitUppercase(n: number): string {\n    const fraction = [\"角\", \"分\"];\n    const digit = [\"零\", \"壹\", \"贰\", \"叁\", \"肆\", \"伍\", \"陆\", \"柒\", \"捌\", \"玖\"];\n    const unit = [\n        [\"元\", \"万\", \"亿\"],\n        [\"\", \"拾\", \"佰\", \"仟\"]\n    ];\n    const head = n < 0 ? \"欠\" : \"\";\n    n = Math.abs(n);\n    let s = \"\";\n    for (let i = 0; i < fraction.length; i++) {\n        s += (\n            digit[Math.floor(n * 10 * Math.pow(10, i)) % 10] + fraction[i]\n        ).replace(/零./, \"\");\n    }\n    s = s || \"整\";\n    n = Math.floor(n);\n    for (let i = 0; i < unit[0].length && n > 0; i++) {\n        let p = \"\";\n        for (let j = 0; j < unit[1].length && n > 0; j++) {\n            p = digit[n % 10] + unit[1][j] + p;\n            n = Math.floor(n / 10);\n        }\n        s = p.replace(/(零.)*零$/, \"\").replace(/^$/, \"零\") + unit[0][i] + s;\n    }\n    return (\n        head +\n        s\n            .replace(/(零.)*零元/, \"元\")\n            .replace(/(零.)+/g, \"零\")\n            .replace(/^整$/, \"零元整\")\n    );\n}\n\n/**\n *\n * @desc 判断浏览器是否支持webP格式图片\n * @return {Boolean}\n */\nexport function isSupportWebP(): boolean {\n    return (\n        !![].map &&\n        document\n            .createElement(\"canvas\")\n            .toDataURL(\"image/webp\")\n            .indexOf(\"data:image/webp\") == 0\n    );\n}\n\n/**\n * @desc   格式化${startTime}距现在的已过时间\n * @param  {String} startTime\n * @return {String}\n */\nexport function formatPassTime(startTime: string): string {\n    const aftertime = Date.parse(new Date(startTime).toISOString());\n    const currentTime = Date.parse(new Date().toISOString());\n    const time = currentTime - aftertime;\n    const day = parseInt(`${time / (1000 * 60 * 60 * 24)}`);\n    const hour = parseInt(`${time / (1000 * 60 * 60)}`);\n    const min = parseInt(`${time / (1000 * 60)}`);\n    const month = parseInt(`${day / 30}`);\n    const year = parseInt(`${month / 12}`);\n    if (year) return `${year}年前`;\n    if (month) return `${month}个月前`;\n    if (day) return `${day}天前`;\n    if (hour) return `${hour}小时前`;\n    if (min) return `${min}分钟前`;\n    return \"刚刚\";\n}\n\n/**\n *\n * @desc   格式化现在距${endTime}的剩余时间\n * @param  {Date} endTime\n * @return {String}\n */\nexport function formatRemainTime(endTime: Date): string {\n    const startDate = new Date(); // 开始时间\n    const endDate = new Date(endTime); // 结束时间\n    const t = endDate.getTime() - startDate.getTime(); // 时间差\n    let d = 0;\n    let h = 0;\n    let m = 0;\n    let s = 0;\n    if (t >= 0) {\n        d = Math.floor(t / 1000 / 3600 / 24);\n        h = Math.floor((t / 1000 / 60 / 60) % 24);\n        m = Math.floor((t / 1000 / 60) % 60);\n        s = Math.floor((t / 1000) % 60);\n    }\n    return `${d}天 ${h}小时 ${m}分钟 ${s}秒`;\n}\n\n/**\n *\n * @desc 是否为闰年\n * @param {Number} year\n * @return {Boolean}\n */\nexport function isLeapYear(year: number): boolean {\n    if (year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * @desc   判断是否为同一天\n * @param  {Date} date1\n * @param  {Date} date2 可选／默认值：当天\n * @return {Boolean}\n */\nexport function isSameDay(date1: Date, date2: Date): boolean {\n    if (!date2) {\n        date2 = new Date();\n    }\n    const date1_year = date1.getFullYear();\n    const date1_month = date1.getMonth() + 1;\n    const date1_date = date1.getDate();\n    const date2_year = date2.getFullYear();\n    const date2_month = date2.getMonth() + 1;\n    const date2_date = date2.getDate();\n\n    return (\n        date1_date === date2_date &&\n        date1_month === date2_month &&\n        date1_year === date2_year\n    );\n}\n\n/**\n * @desc 获取指定日期月份的总天数\n * @param {Date} time\n * @return {Number}\n */\nexport function monthDays(date: Date): number {\n    const time = new Date(date);\n    const year = time.getFullYear();\n    const month = time.getMonth() + 1;\n    return new Date(year, month, 0).getDate();\n}\n\n/**\n * @desc ${startTime - endTime}的剩余时间,startTime大于endTime时，均返回0\n * @param { Date | String } startTime\n * @param { Date | String } endTime\n * @return { Object } { d, h, m, s } 天 时 分 秒\n */\nexport function timeLeft(\n    startTime: Date | string,\n    endTime: Date | string\n): boolean | { d: number; h: number; m: number; s: number } {\n    if (!startTime || !endTime) {\n        return false;\n    }\n    let startDate;\n    let endDate;\n    if (startTime instanceof Date) {\n        startDate = startTime;\n    } else {\n        startDate = new Date(startTime.replace(/-/g, \"/\")); // 开始时间\n    }\n    if (endTime instanceof Date) {\n        endDate = endTime;\n    } else {\n        endDate = new Date(endTime.replace(/-/g, \"/\")); // 结束时间\n    }\n    const t = endDate.getTime() - startDate.getTime();\n    let d = 0;\n    let h = 0;\n    let m = 0;\n    let s = 0;\n    if (t >= 0) {\n        d = Math.floor(t / 1000 / 3600 / 24);\n        h = Math.floor((t / 1000 / 60 / 60) % 24);\n        m = Math.floor((t / 1000 / 60) % 60);\n        s = Math.floor((t / 1000) % 60);\n    }\n    return { d, h, m, s };\n}\n\n/**\n *\n * @desc   url参数转对象\n * @param  {String} url  default: window.location.href\n * @return {Object}\n */\nexport function parseQuery(query: string): { [key: string]: string } {\n    query = !query ? window.location.href : query;\n    const queryWithoutStart: string =\n        query.indexOf(\"?\") === 0 ? query.substring(1) : query;\n    const uaFormated: { [key: string]: string } = {};\n    const strs: string[] = queryWithoutStart.split(\"&\");\n    for (let querySingle in strs) {\n        uaFormated[querySingle.split(\"=\")[0]] = unescape(querySingle.split(\"=\")[1]);\n    }\n    return uaFormated;\n}\n\n/**\n *\n * @desc   对象序列化\n * @param  {Object} obj\n * @return {String}\n */\nexport function stringfyQueryString(obj: { [propName: string]: any }): string {\n    if (!obj) return \"\";\n    const pairs: string[] = [];\n\n    for (const key in obj) {\n        const value = obj[key];\n\n        if (value instanceof Array) {\n            for (let i = 0; i < value.length; ++i) {\n                pairs.push(\n                    `${encodeURIComponent(`${key}[${i}]`)}=${encodeURIComponent(\n                        value[i]\n                    )}`\n                );\n            }\n            continue;\n        }\n\n        pairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(obj[key])}`);\n    }\n\n    return pairs.join(\"&\");\n}\n\n/**\n * @description base64转blob\n * @param urlData base64编码\n */\nexport function convertBase64UrlToBlob(urlData: any) {\n    const arr = urlData.split(\",\");\n    const mime = arr[0].match(/:(.*?);/)[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new Blob([u8arr], { type: mime });\n}\n\n/**\n *\n * @desc   获取UUID\n * @return {String}\n */\nexport function getUUID() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0;\n        const v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n\n/**\n *\n * @desc   获取浏览器信息\n * @return  {Object} obj\n */\nexport function getBrowser(): {\n    Sys: { name: string; ver: string };\n    info: string;\n} {\n    const Sys = { name: \"\", ver: \"\" };\n    const ua = navigator.userAgent.toLowerCase();\n    const re = /(msie|firefox|chrome|opera|version).*?([\\d.]+)/;\n    const m = ua.match(re);\n    if (!m) {\n        return {\n            Sys: {\n                name: \"\",\n                ver: \"\"\n            },\n            info: \"\"\n        };\n    }\n    Sys.name = m[1].replace(/version/, \"safari\");\n    Sys.ver = m[2];\n    return { Sys, info: ua };\n}\n\n/**\n *\n * @desc   获取系统名称和版本号\n * @return {String} example: mac68k win7\n */\nexport function checkOS() {\n    const sUserAgent = navigator.userAgent.toLowerCase();\n    const sPlatform = navigator.platform.toLowerCase();\n    const isWin = sPlatform === \"win32\" || sPlatform === \"windows\";\n    const isMac =\n        sPlatform === \"mac68k\" ||\n        sPlatform === \"macppc\" ||\n        sPlatform === \"macintosh\" ||\n        sPlatform === \"macintel\";\n    const isUnix = sPlatform === \"x11\" && !isWin && !isMac;\n    const isLinux = String(sPlatform).indexOf(\"linux\") > -1;\n    if (isMac) return \"MAC\";\n    if (isUnix) return \"Unix\";\n    if (isLinux) return \"Linux\";\n    if (isWin) {\n        const isWin2K =\n            sUserAgent.indexOf(\"windows nt 5.0\") > -1 ||\n            sUserAgent.indexOf(\"windows 2000\") > -1;\n        if (isWin2K) return \"Win2000\";\n        const isWinXP =\n            sUserAgent.indexOf(\"windows nt 5.1\") > -1 ||\n            sUserAgent.indexOf(\"windows xp\") > -1;\n        if (isWinXP) return \"WinXP\";\n        const isWin2003 =\n            sUserAgent.indexOf(\"windows nt 5.2\") > -1 ||\n            sUserAgent.indexOf(\"windows 2003\") > -1;\n        if (isWin2003) return \"Win2003\";\n        const isWinVista =\n            sUserAgent.indexOf(\"windows nt 6.0\") > -1 ||\n            sUserAgent.indexOf(\"windows vista\") > -1;\n        if (isWinVista) return \"WinVista\";\n        const isWin7 =\n            sUserAgent.indexOf(\"windows nt 6.1\") > -1 ||\n            sUserAgent.indexOf(\"windows 7\") > -1;\n        if (isWin7) return \"Win7\";\n        const isWin8 =\n            sUserAgent.indexOf(\"windows nt 6.2\") > -1 ||\n            sUserAgent.indexOf(\"windows nt 6.3\") > -1 ||\n            sUserAgent.indexOf(\"windows 8\") > -1;\n        if (isWin8) return \"Win8\";\n        const isWin10 =\n            sUserAgent.indexOf(\"windows nt 10\") > -1 ||\n            sUserAgent.indexOf(\"windows 10\") > -1;\n        if (isWin10) return \"Win10\";\n    }\n    return \"other\";\n}\n\n/**\n *\n * @desc   从sessionStorage获取UserId，如无根据ISO时间戳生成\n * @return {String}\n */\nexport function getUserId() {\n    const userId = sessionStorage.getItem(\"userId\");\n    if (userId) {\n        return userId;\n    }\n    const temp: any = (Date.parse(new Date().toISOString()) % 100000000) / 1000;\n    const userIdTemp = `${Number.parseInt(temp)}`;\n    sessionStorage.setItem(\"userId\", userIdTemp);\n    return userIdTemp;\n}\n\n/**\n *\n * @desc   获取Mac系统版本\n * @return {String}\n */\nexport function getMacOsVersion() {\n    return navigator.userAgent.substr(\n        navigator.userAgent.indexOf(\"OS X\") + 5,\n        navigator.userAgent\n            .substr(navigator.userAgent.indexOf(\"OS X\") + 5)\n            .indexOf(\")\")\n    );\n}\n\n/**\n *\n * @desc   给要加载的js文件添加属性，比如Tag\n * @return {HTMLScriptElement}\n */\nconst buildScriptTag = (src: string, attrs: { [key: string]: string }) => {\n    const script: HTMLScriptElement = document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.src = src;\n    for (let attr in Object.keys(attrs)) {\n        script.setAttribute(attr, attrs[attr]);\n    }\n    return script;\n};\n\n/**\n * @desc    异步加载script\n */\nexport function loadScript(url: string, attrs: { [key: string]: string } = {}): Promise<unknown> {\n    const script = buildScriptTag(url, attrs);\n    const p = new Promise((resolve, reject) => {\n        script.onload = () => {\n            resolve();\n        };\n        script.onerror = () => {\n            reject();\n        };\n    });\n    document.body.appendChild(script);\n    return p;\n};\n\nconst uaParsed: { [key: string]: string } = navigator ? parseQuery(navigator.userAgent) : {};\n\n/**\n * @desc    系统信息判断获取\n */\nexport const platform =  {\n    /**\n     * 是否为mobile\n     */\n    mobile:\n        typeof navigator !== 'undefined' &&\n        /(Android|iPhone|SymbianOS|Windows\\ Phone|iPad|iPod)/i.test(navigator.userAgent),\n    /**\n     * 是否为ios\n     */\n    ios: typeof navigator !== 'undefined' && /(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent),\n    /**\n     * 是否为android\n     */\n    android: typeof navigator !== 'undefined' && /(Android)/i.test(navigator.userAgent),\n    /**\n     * 是否为微信webview\n     */\n    weixinwebview: typeof navigator !== 'undefined' && /MicroMessenger/i.test(navigator.userAgent),\n    /**\n     * 是否为微信小程序\n     */\n    miniprogram: typeof wx !== 'undefined' && typeof wx.getSystemInfo !== 'undefined',\n    /**\n     * 是否为美术宝一对一app\n     */\n    msb1v1app:\n        typeof navigator !== 'undefined' &&\n        typeof uaParsed.ua !== 'undefined' &&\n        (uaParsed.ua.includes('ydy') || uaParsed.ua.includes('vwb')),\n};\n","import {forOwn} from './forOwn'\n\n/**\n * 分配来源对象的可枚举属性到目标对象上。\n *\n * 来源对象的应用规则是从左到右，随后的下一个对象的属性会覆盖上一个对象的属性。\n *\n * @param target 目标对象\n * @param sources 来源对象序列\n * @returns 返回扩展后的目标对象\n * @example\n * ```ts\n * assign(\n *   {},\n *   { x: 1 },\n *   { y: 2 },\n *   { x: 5, z: 9 },\n * )\n * // => { x: 5, y: 2, z: 9 }\n * ```\n */\nexport function assign<T extends object>(target: T, ...sources: object[]): T {\n  // 使用 Object['assign'] 防止替换\n  if (Object['assign']) {\n    return Object['assign'](target, ...sources)\n  }\n\n  for (const source of sources) {\n    forOwn(source, (value, key) => {\n      target[key] = value\n    })\n  }\n\n  return target\n}\n","import {isFunction, isPositiveInteger} from './is'\n\n/**\n * 将 `arr` 拆分成多个 `size` 长度的区块，并将它们组合成一个新数组返回。\n *\n * 如果 `arr` 无法等分，且设置了 `filler` 函数，剩余的元素将被 `filler` 函数的返回值填充。\n *\n * @param arr 要处理的数组\n * @param size 每个区块的长度\n * @param filler 返回填充物的函数，其接收当前填充物的索引，即第几个填充物（从 `0` 开始），并返回填充物\n * @returns 返回拆分后的新数组\n * @example\n * ```ts\n * const arr = [1, 2, 3, 4, 5, 6]\n * chunk(arr, 2) // => [[1, 2], [3, 4], [5, 6]]\n * chunk(arr, 3) // => [[1, 2, 3], [4, 5, 6]]\n * chunk(arr, 4) // => [[1, 2, 3, 4], [5, 6]]\n * chunk(arr, 4, index => index) // => [[1, 2, 3, 4], [5, 6, 0, 1]]\n * ```\n */\nexport function chunk<T>(arr: T[], size: number, filler?: (index: number) => T): T[][] {\n  if (!isPositiveInteger(size)) {\n    throw new RangeError('size 应为正整数')\n  }\n  if (arr.length === 0) {\n    return []\n  }\n  const result: T[][] = []\n  const rows = Math.ceil(arr.length / size)\n  for (let i = 0; i < rows; i++) {\n    result.push(arr.slice(i * size, (i + 1) * size))\n  }\n  const lastRow = result[rows - 1]\n  if (arguments.length === 3 && lastRow.length < size) {\n    const fillerIsFunction = isFunction(filler)\n    for (let i = 0, len = size - lastRow.length; i < len; i++) {\n      lastRow.push(\n        fillerIsFunction ? (filler as any)(i) : filler,\n      )\n    }\n  }\n  return result\n}\n","/**\n * 转义正则表达式中的特殊字符。\n *\n * @param str 要转换的字符串\n * @returns 返回转换后的字符串\n * @example\n * ```ts\n * escapeRegExp('github.com') // => 'github\\\\.com'\n * ```\n */\nexport function escapeRegExp(str: string): string {\n  str = String(str)\n\n  const re = /[\\\\^$.*+?()[\\]{}|]/g\n  const hasRe = new RegExp(re.source)\n\n  return str && hasRe.test(str)\n    ? str.replace(re, '\\\\$&')\n    : str\n}\n","export interface GroupByIteratee<T, K> {\n  /**\n   * 迭代函数。\n   *\n   * @param item 数据项\n   * @param index 数据项的索引\n   * @returns 返回在分组结果中的键\n   */\n  (item: T, index: number, data: T[]): K,\n}\n\n/**\n * 根据 `iteratee` 返回的值对 `data` 进行分组。\n *\n * @param data 要分组的数据\n * @param iteratee 迭代函数\n * @returns 返回分组结果\n * @example\n * ```ts\n * groupBy(\n *   [\n *     { type: 1, name: '石头' },\n *     { type: 3, name: '花生' },\n *     { type: 2, name: '鲸鱼' },\n *     { type: 1, name: '树木' },\n *     { type: 2, name: '鲨鱼' },\n *   ],\n *   item => item.type,\n * )\n * // => {\n * // =>   1: [\n * // =>     { type: 1, name: '石头' },\n * // =>     { type: 1, name: '树木' },\n * // =>   ],\n * // =>   2: [\n * // =>     { type: 2, name: '鲸鱼' },\n * // =>     { type: 2, name: '鲨鱼' },\n * // =>   ],\n * // =>   3: [\n * // =>     { type: 3, name: '花生' },\n * // =>   ],\n * // => }\n * ```\n */\nexport function groupBy<T, K extends keyof any>(\n  data: T[],\n  iteratee: GroupByIteratee<T, K>,\n) {\n  return data.reduce<Record<K, T[]>>(\n    (res, item, index) => {\n      const key = iteratee(item, index, data)\n      if (!res[key]) {\n        res[key] = []\n      }\n      res[key].push(item)\n      return res\n    },\n    {} as any,\n  )\n}\n","import {LiteralUnion} from './enhanceType'\n\n/**\n * 检查 `key` 是否是对象 `obj` 自身的属性。\n *\n * @param obj 要检查的对象\n * @param key 要检查的键\n * @returns `key` 是 `obj` 自身的属性返回 `true`，否则返回 `false`\n * @example\n * ```ts\n * const obj = { x: 1, 2: 'y' }\n * has(obj, 'x') // => true\n * has(obj, 2) // => true\n * has(obj, 'toString') // => false\n * ```\n */\nexport function has<T>(\n  obj: T,\n  key: LiteralUnion<\n  T extends any[] ? never : keyof T,\n  string | number | symbol\n  >,\n): boolean {\n  return obj != null && Object.prototype.hasOwnProperty.call(obj, key)\n}\n"],"names":["forOwn","obj","traverse","const","key","Object","prototype","hasOwnProperty","call","store","create","getGlobal","inBrowser","window","global","Function","eval","callback","undefined","document","nodeType","inNode","process","versions","node","inWechatMiniProgram","wx","getSystemInfo","inWechatWebview","test","navigator","userAgent","toLowerCase","inIOS","platform","inAndroid","getType","value","toString","slice","ii","fn","isFunction","isHan","isInteger","Number","isPositiveInteger","isNaN","isObject","type","isPlainObject","proto","getPrototypeOf","Ctor","constructor","getAbsoluteUrl","url","URL","location","href","anchorElement","createElement","hasClass","ele","cls","RegExp","className","setCookie","name","days","date","Date","setDate","getDate","cookie","now","getTime","getScrollTop","documentElement","scrollTop","body","clearCache","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","setTimeout","setScrollTop","scrollTo","parseQuery","query","uaFormated","strs","indexOf","substring","split","let","querySingle","unescape","buildScriptTag","src","attrs","script","attr","async","defer","keys","setAttribute","uaParsed","mobile","ios","android","weixinwebview","miniprogram","msb1v1app","ua","includes","arr1","arr2","length","i","target","sources","sUserAgent","sPlatform","isWin","isMac","isUnix","isLinux","String","arr","size","filler","RangeError","result","rows","Math","ceil","push","lastRow","arguments","fillerIsFunction","len","urlData","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","func","wait","immediate","timeout","context","this","callNow","clearTimeout","apply","args","deepClone","values","copy","setTime","Array","Error","fraction","digit","unit","head","abs","s","floor","pow","replace","p","j","str","re","hasRe","source","startTime","aftertime","parse","toISOString","time","day","parseInt","hour","min","month","year","mouseX","mouseY","zoom","x","y","endTime","startDate","t","d","h","m","Sys","ver","info","tempArr","decodeURIComponent","querySelector","sys","ie","edge","firefox","opera","chrome","safari","keycode","keyCodeMap","console","log","substr","appVersion","resAry","currentTime","uidAry","map","random","join","c","r","userId","sessionStorage","getItem","temp","userIdTemp","setItem","data","iteratee","reduce","res","item","index","isArray","weightMap","isValidDate","getFullYear","getMonth","num","toUpperCase","some","_","arrs","isFinite","parseFloat","number","then","date1","date2","date1_year","date1_month","date1_date","date2_year","date2_month","toDataURL","Promise","resolve","reject","onload","onerror","appendChild","pos","left","top","offsetLeft","offsetTop","offsetParent","max","reg","to","duration","diff","step","pairs","encodeURIComponent","options","previous","later","leading","throttled","tnow","remaining","targs","trailing","cancel","downCb","upCb","clientHeight","innerHeight","addEventListener","height"],"mappings":"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"}